{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[tool]
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.md"
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
{%- if cookiecutter.open_source_license in license_classifiers %}
    '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10'
    'Programming Language :: Python :: 3.11',
]
packages = [
    { include = "{{ cookiecutter.pkg_name }}" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
{%- if cookiecutter.command_line_interface|lower == 'click' %}
click = "^8.1.3"
{%- endif %}
openpyxl = "^3.0.10"
pydantic = "^1.10.4"

black  = { version = "^21.5b2", optional = true}
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
{%- if cookiecutter.use_mypy == 'y' %}
mypy = {version = "^0.900", optional = true}
{%- endif %}

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
black = "^22.12.0"
isort = "^5.11.4"
mypy = "^0.991"
flake8 = "^6.0.0"
flake8-docstrings = "^1.6.0"
factory-boy = "^3.2.1"
pytz = "^2022.7"
bump2version = "^1.0.1"
twine = "^4.0.2"
coverage = "^7.0.3"
tox = "^4.2.6"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
freezegun = "^1.2.2"


[tool.poetry.group.doc.dependencies]
mkdocs = "^1.4.2"
mkdocs-include-markdown-plugin = "^3.9.1"
mkdocs-material = "^8.5.10"
mkdocstrings = "^0.19.0"
mkdocs-autorefs = "^0.4.1"

{% if cookiecutter.command_line_interface|lower == 'click' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli:main'
{% endif -%}

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 6
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = false
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
